- name: Backup Single Database
  hosts: all

  tasks:
    - name: Create variables
      set_fact:
        db_file_name: "{{ db_name }}-{{ ansible_date_time.date }}.sql"

    - name: Download Database to server
      shell: |
        mysqldump -u {{ db_user_name}} -p"{{ db_user_password }}" {{ db_name }} --quick --lock-tables=false > "{{ db_file_name }}" --no-tablespaces
      register: result
        
    - name: Show result
      debug:
        msg: "{{ result.stdout_lines }}"
      when: not ansible_check_mode

    - name: Wait until the database backup completed on server
      wait_for:
        path: "{{ db_file_name }}"
        state: present
        msg: "Timeout to find file {{ db_file_name }}"

    - name: Downloading backup to local computer
      become: true
      ansible.builtin.fetch:
        src: "{{ db_file_name }}"
        dest: "{{ db_file_name }}"
        flat: yes
    
    - name: Copy file to bucket
      amazon.aws.s3_object:
        bucket: {{ bucket }}
        object: "{{ item.path }}"
        src: "{{ item.path }}"
        mode: put
        permission: "private"
        s3_url: "{{ s3_url }}"
      environment:
        AWS_ACCESS_KEY: "{{ access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ secret_key }}"
        
    - name: Remove remote file
      ansible.builtin.file:
        path: "{{ db_file_name }}"
        state: absent
    
    - name: Remove local file
      ansible.builtin.file:
        path: "{{ db_file_name }}"
        state: absent
      delegate_to: localhost